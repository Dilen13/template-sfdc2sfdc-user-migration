<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <sub-flow name="createUserFlow" doc:name="createUserFlow">
        <foreach doc:name="for each User to be created/updated">
            <enricher target="#[flowVars['userInA']]" doc:name="store result of query in 'userInA'" source="#[payload]">
                <sfdc:query-single config-ref="SalesforceA" query="SELECT Id FROM User WHERE Email LIKE '#[payload['Email']]'" doc:name="query User in Salesforce Instance A"/>
            </enricher>
            <expression-component doc:name="set fields to userInA where needed"><![CDATA[if (flowVars['userInA'] != null) {
	payload.put('Id', flowVars['userInA']['Id']);
}	]]></expression-component>
        </foreach>
        <sfdc:upsert config-ref="SalesforceA" type="User" externalIdFieldName="Id" doc:name="upsert Users in Salesforce Instance A">
            <sfdc:objects ref="#[payload]"/>
        </sfdc:upsert>
    </sub-flow>
    <sub-flow name="retrieveUserFlow" doc:name="retrieveUserFlow">
        <sfdc:query-single config-ref="SalesforceB" query="SELECT Id, Email FROM User WHERE Email = '#[payload['Email']]'" doc:name="query single User in SalesForce instance B"/>
    </sub-flow>
    <sub-flow name="deleteUserFromAFlow" doc:name="deleteUserFromAFlow">
        <sfdc:delete config-ref="SalesforceA" doc:name="delete User in SalesForce instance A">
            <sfdc:ids ref="#[payload]"/>
        </sfdc:delete>
    </sub-flow>
    <sub-flow name="deleteUserFromBFlow" doc:name="deleteUserFromBFlow">
        <sfdc:delete config-ref="SalesforceB" doc:name="delete User in SalesForce instance B">
            <sfdc:ids ref="#[payload]"/>
        </sfdc:delete>
    </sub-flow>
</mule>
